# Generated by Django 5.0.2 on 2024-02-29 21:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('municipality', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('neighborhood', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_street', message='A rua deve conter apenas números.', regex='^[0-9]*$')])),
                ('number', models.CharField(max_length=20)),
                ('cep', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_cep', message='A CEP deve conter apenas números.', regex='^[0-9]*$')])),
            ],
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('format_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='O nome deve conter apenas letras.', regex='^[A-Za-z]*$')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='O nome deve conter apenas letras.', regex='^[A-Za-z]*$')])),
                ('administrator', models.BooleanField(default=False)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KeyArenaApp.address')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('quantity_participants', models.IntegerField(validators=[django.core.validators.MinValueValidator(2, message='O torneio deve ter no mínimo 2 participantes.'), django.core.validators.MaxValueValidator(100, message='100 participantes, torneio lotado.')])),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KeyArenaApp.format')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='KeyArenaApp.user')),
            ],
        ),
    ]
